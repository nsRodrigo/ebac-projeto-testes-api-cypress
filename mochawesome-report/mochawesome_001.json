{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-23T01:19:55.908Z",
    "end": "2023-08-23T01:19:56.806Z",
    "duration": 898,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "06b45432-6fef-4968-87c1-c6b50c93eb74",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1f671937-98e8-4819-9637-a72e17a88b22",
          "title": "Produtos - Testes de API ServeRest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de produtos",
              "fullTitle": "Produtos - Testes de API ServeRest Deve validar contrato de produtos",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "c1a3c193-8e2c-4422-882a-ebc1aba654b3",
              "parentUUID": "1f671937-98e8-4819-9637-a72e17a88b22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar a lista de produtos cadastrados com sucesso",
              "fullTitle": "Produtos - Testes de API ServeRest Deve validar a lista de produtos cadastrados com sucesso",
              "timedOut": null,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api('produtos').then(response => {\n  expect(response.body.produtos[0].nome).to.include(\"Ebac\");\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property(\"produtos\");\n  expect(response.duration).to.be.lessThan(15);\n});",
              "err": {},
              "uuid": "dd32a82a-f0c6-425e-99a9-0815c33d6f53",
              "parentUUID": "1f671937-98e8-4819-9637-a72e17a88b22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de cadastro de produto",
              "fullTitle": "Produtos - Testes de API ServeRest Deve validar mensagem de cadastro de produto",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(produto, valor, \"Novo Produto\", qtd, token).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal(\"Cadastro realizado com sucesso\");\n  return response.body._id;\n}).then(idNew => {\n  id = idNew;\n});",
              "err": {},
              "uuid": "121ed030-774f-430a-9442-a9364692df9d",
              "parentUUID": "1f671937-98e8-4819-9637-a72e17a88b22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de erro para cadastro de produto repetido",
              "fullTitle": "Produtos - Testes de API ServeRest Deve validar mensagem de erro para cadastro de produto repetido",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(\"Logitech MX Keys\", 250, \"Novo Produto\", 10, token).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal(\"Já existe produto com esse nome\");\n});",
              "err": {},
              "uuid": "2f9621eb-16bf-40ef-b973-c68bfdba1483",
              "parentUUID": "1f671937-98e8-4819-9637-a72e17a88b22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar a edição de um produto já cadastrado",
              "fullTitle": "Produtos - Testes de API ServeRest Deve validar a edição de um produto já cadastrado",
              "timedOut": null,
              "duration": 69,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'PUT',\n  url: `produtos/${id}`,\n  headers: {\n    authorization: token\n  },\n  body: {\n    nome: produto,\n    preco: valor,\n    descricao: 'Produto Editado',\n    quantidade: qtd\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.message).to.equal('Registro alterado com sucesso');\n});",
              "err": {},
              "uuid": "8217024f-17c8-418f-96a8-fb611226242f",
              "parentUUID": "1f671937-98e8-4819-9637-a72e17a88b22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de erro ao tentar editar um produto enviar o campo preço",
              "fullTitle": "Produtos - Testes de API ServeRest Deve validar mensagem de erro ao tentar editar um produto enviar o campo preço",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'PUT',\n  url: `produtos/${id}`,\n  headers: {\n    authorization: token\n  },\n  body: {\n    nome: produto,\n    descricao: 'Produto Editado',\n    quantidade: qtd\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.preco).to.equal('preco é obrigatório');\n});",
              "err": {},
              "uuid": "9826edbf-1347-4881-a210-9e565cceaf51",
              "parentUUID": "1f671937-98e8-4819-9637-a72e17a88b22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de erro ao tentar editar um produto enviar o campo nome",
              "fullTitle": "Produtos - Testes de API ServeRest Deve validar mensagem de erro ao tentar editar um produto enviar o campo nome",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'PUT',\n  url: `produtos/${id}`,\n  headers: {\n    authorization: token\n  },\n  body: {\n    preco: valor,\n    descricao: 'Produto Editado',\n    quantidade: qtd\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.nome).to.equal('nome é obrigatório');\n});",
              "err": {},
              "uuid": "1a398385-3a95-486b-959b-590c5b7f7224",
              "parentUUID": "1f671937-98e8-4819-9637-a72e17a88b22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de erro ao tentar editar um produto enviar o campo descrição",
              "fullTitle": "Produtos - Testes de API ServeRest Deve validar mensagem de erro ao tentar editar um produto enviar o campo descrição",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'PUT',\n  url: `produtos/${id}`,\n  headers: {\n    authorization: token\n  },\n  body: {\n    nome: produto,\n    preco: valor,\n    quantidade: qtd\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.descricao).to.equal('descricao é obrigatório');\n});",
              "err": {},
              "uuid": "cf1dab22-9894-4552-b318-9e4320ad16a7",
              "parentUUID": "1f671937-98e8-4819-9637-a72e17a88b22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de erro ao tentar editar um produto enviar o campo quantidade",
              "fullTitle": "Produtos - Testes de API ServeRest Deve validar mensagem de erro ao tentar editar um produto enviar o campo quantidade",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'PUT',\n  url: `produtos/${id}`,\n  headers: {\n    authorization: token\n  },\n  body: {\n    nome: produto,\n    preco: valor,\n    descricao: 'Produto Editado'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.quantidade).to.equal('quantidade é obrigatório');\n});",
              "err": {},
              "uuid": "a8821423-4679-4008-8edd-721baf428817",
              "parentUUID": "1f671937-98e8-4819-9637-a72e17a88b22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar a exclusão de um produto cadastrado",
              "fullTitle": "Produtos - Testes de API ServeRest Deve validar a exclusão de um produto cadastrado",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'DELETE',\n  url: `produtos/${id}`,\n  headers: {\n    authorization: token\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.message).to.equal('Registro excluído com sucesso');\n});",
              "err": {},
              "uuid": "76dbcd5e-f07b-4918-9e5c-291ae0efa3a4",
              "parentUUID": "1f671937-98e8-4819-9637-a72e17a88b22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1a3c193-8e2c-4422-882a-ebc1aba654b3",
            "dd32a82a-f0c6-425e-99a9-0815c33d6f53",
            "121ed030-774f-430a-9442-a9364692df9d",
            "2f9621eb-16bf-40ef-b973-c68bfdba1483",
            "8217024f-17c8-418f-96a8-fb611226242f",
            "9826edbf-1347-4881-a210-9e565cceaf51",
            "1a398385-3a95-486b-959b-590c5b7f7224",
            "cf1dab22-9894-4552-b318-9e4320ad16a7",
            "a8821423-4679-4008-8edd-721baf428817",
            "76dbcd5e-f07b-4918-9e5c-291ae0efa3a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 797,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}